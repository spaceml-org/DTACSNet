[tool.poetry]
name = "dtacs"
version = "1.0.1"
description = "🛰️ Cloud Detection and Atmospheric Correction With Efficient Deep Learning Models"
authors = ["Gonzalo Mateo-García", "Cesar Aybar", "Giacomo Acciarini"]
repository = "https://github.com/spaceml-org/DTACSNet"
documentation = "https://spaceml-org.github.io/DTACSNet/"
readme = "README.md"
license = "	GPL-3.0"
packages = [
  {include = "dtacs"}
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
rasterio = ">=1"
numpy = ">=1"
torch = "^2.5.1"
segmentation-models-pytorch = "^0.3.4"
tqdm = "^4.67.1"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = {extras = ["imaging"], version = "^9.5.43"}
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
mknotebooks = "^0.8"
pygments = "^2.18.0"
jupyter = "^1.1.1"
ipykernel = "^6.29.5"
pymdown-extensions = "^10.12"
ghp-import = "^2.1.0"
mdx-truly-sane-lists = "^1.3"
mkdocs-same-dir = "^0.1.3"
mkdocs-awesome-pages-plugin = "^2.9.3"

[tool.poetry.group.tutorial.dependencies]
fsspec = "^2024.10.0"
requests = "^2.32.3"
matplotlib = "^3.9.2"
folium = "^0.18.0"
earthengine-api = "^1.2.0"
pysolar = "^0.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.format]
preview = true



[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
